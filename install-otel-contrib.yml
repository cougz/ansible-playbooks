- name: Migrate from Supervisor OpenTelemetry to SystemD OpenTelemetry Collector Contrib
  hosts: debian_servers
  become: yes
  vars_prompt:
    - name: otel_endpoint
      prompt: "Enter your OTEL-LGTM stack endpoint (e.g., http://your-lgtm-stack:4317)"
      private: no
    - name: otel_headers
      prompt: "Enter any additional headers (optional, format: key1=value1,key2=value2)"
      private: no
      default: ""

  vars:
    otel_version: "0.126.0"
    otel_user: "otelcol"
    otel_group: "otelcol"
    otel_home: "/opt/otelcol-contrib"
    otel_config_dir: "/etc/otelcol-contrib"
    otel_log_dir: "/var/log/otelcol-contrib"

  tasks:
    # ============= VALIDATE SURVEY VARIABLES =============
    - name: Validate survey variables
      block:
        - name: Check if otel_endpoint is provided
          fail:
            msg: "OTEL endpoint must be provided via Survey variable 'otel_endpoint'"
          when: otel_endpoint is not defined or otel_endpoint == ''
          run_once: true

        - name: Set default otel_headers if not provided
          set_fact:
            otel_headers: ""
          when: otel_headers is not defined
          run_once: true

    - name: Gather facts for target machines
      setup:

    - name: Display migration info
      debug:
        msg: |
          ===============================================
          OpenTelemetry Migration (Supervisor → SystemD)
          ===============================================
          Target Endpoint: {{ otel_endpoint }}
          Headers: {{ otel_headers if otel_headers != '' else 'None' }}
          OTel Version: {{ otel_version }}
          Migration: supervisor → systemd (otel-contrib)
          ===============================================

    # ============= COMPLETE REMOVAL OF OLD SUPERVISOR INSTALLATION =============
    - name: Display migration start message
      debug:
        msg: "Starting migration from supervisor-managed OpenTelemetry to systemd otel-contrib"

    - name: Check current supervisor OpenTelemetry status
      shell: supervisorctl status otel-collector 2>/dev/null || echo "not_found"
      register: current_otel_status
      changed_when: false
      failed_when: false

    - name: Display current OpenTelemetry status
      debug:
        msg: "Current supervisor OpenTelemetry status: {{ current_otel_status.stdout }}"

    - name: Stop OpenTelemetry collector via supervisor
      supervisorctl:
        name: otel-collector
        state: stopped
      when: "'not_found' not in current_otel_status.stdout"
      ignore_errors: yes

    - name: Remove OpenTelemetry from supervisor management
      shell: |
        supervisorctl remove otel-collector 2>/dev/null || true
        supervisorctl reread
        supervisorctl update
      ignore_errors: yes

    - name: Remove supervisor configuration file
      file:
        path: /etc/supervisor/conf.d/otel-collector.conf
        state: absent

    - name: Kill any remaining OpenTelemetry processes
      shell: |
        # Kill processes matching the old installation pattern
        pkill -f "/usr/local/bin/otelcol.*--config=/etc/otel/config.yaml" || true
        pkill -f "otel-collector" || true
        sleep 3
      ignore_errors: yes

    - name: Remove old OpenTelemetry binary
      file:
        path: /usr/local/bin/otelcol
        state: absent

    - name: Remove old OpenTelemetry configuration directory
      file:
        path: /etc/otel
        state: absent

    - name: Remove old OpenTelemetry log directory
      file:
        path: /var/log/otel
        state: absent

    - name: Remove old installation script
      file:
        path: /etc/otel-agent-install.sh
        state: absent

    - name: Clean up any old systemd services
      block:
        - name: Check for old systemd otelcol service
          stat:
            path: /etc/systemd/system/otelcol.service
          register: old_systemd_service

        - name: Stop and disable old systemd otelcol service
          systemd:
            name: otelcol
            state: stopped
            enabled: no
            daemon_reload: yes
          when: old_systemd_service.stat.exists
          ignore_errors: yes

        - name: Remove old systemd service file
          file:
            path: /etc/systemd/system/otelcol.service
            state: absent
          when: old_systemd_service.stat.exists

    - name: Verify complete cleanup
      shell: |
        echo "=== POST-CLEANUP VERIFICATION ==="
        echo "1. Supervisor status:"
        supervisorctl status otel-collector 2>/dev/null || echo "✓ otel-collector removed from supervisor"
        echo "2. Old binary:"
        ls -la /usr/local/bin/otelcol 2>/dev/null || echo "✓ Old binary removed"
        echo "3. Old config directory:"
        ls -la /etc/otel/ 2>/dev/null || echo "✓ Old config directory removed"
        echo "4. Old log directory:"
        ls -la /var/log/otel/ 2>/dev/null || echo "✓ Old log directory removed"
        echo "5. Supervisor config:"
        ls -la /etc/supervisor/conf.d/otel-collector.conf 2>/dev/null || echo "✓ Supervisor config removed"
        echo "6. Running processes:"
        pgrep -f otelcol || echo "✓ No old otelcol processes running"
      register: cleanup_verification
      changed_when: false

    - name: Display cleanup verification
      debug:
        msg: "{{ cleanup_verification.stdout_lines }}"

    # ============= INSTALL NEW OTEL-CONTRIB WITH SYSTEMD =============
    - name: Create OpenTelemetry group
      group:
        name: "{{ otel_group }}"
        system: yes

    - name: Create OpenTelemetry user
      user:
        name: "{{ otel_user }}"
        group: "{{ otel_group }}"
        system: yes
        shell: /bin/false
        home: "{{ otel_home }}"
        create_home: no

    - name: Create OpenTelemetry directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ otel_user }}"
        group: "{{ otel_group }}"
        mode: '0755'
      loop:
        - "{{ otel_home }}"
        - "{{ otel_config_dir }}"
        - "{{ otel_log_dir }}"

    - name: Download OpenTelemetry Collector Contrib
      get_url:
        url: "https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v{{ otel_version }}/otelcol-contrib_{{ otel_version }}_linux_amd64.tar.gz"
        dest: "/tmp/otelcol-contrib.tar.gz"
        mode: '0644'
        timeout: 120

    - name: Extract OpenTelemetry Collector Contrib
      unarchive:
        src: "/tmp/otelcol-contrib.tar.gz"
        dest: "{{ otel_home }}"
        remote_src: yes
        owner: "{{ otel_user }}"
        group: "{{ otel_group }}"
        creates: "{{ otel_home }}/otelcol-contrib"

    - name: Set executable permissions on otelcol-contrib binary
      file:
        path: "{{ otel_home }}/otelcol-contrib"
        mode: '0755'
        owner: "{{ otel_user }}"
        group: "{{ otel_group }}"

    - name: Create OpenTelemetry Collector configuration
      template:
        src: otel-config.yaml.j2
        dest: "{{ otel_config_dir }}/config.yaml"
        owner: "{{ otel_user }}"
        group: "{{ otel_group }}"
        mode: '0644'
      notify: restart otelcol

    - name: Create OpenTelemetry systemd service
      template:
        src: otelcol-contrib.service.j2
        dest: /etc/systemd/system/otelcol-contrib.service
        mode: '0644'
      notify:
        - reload systemd
        - restart otelcol

    - name: Install required packages for system monitoring
      apt:
        name:
          - procps
          - sysstat
        state: present
        update_cache: yes

    - name: Clean up downloaded archive
      file:
        path: "/tmp/otelcol-contrib.tar.gz"
        state: absent

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start and enable OpenTelemetry Collector service
      systemd:
        name: otelcol-contrib
        state: started
        enabled: yes

    - name: Wait for service to start
      pause:
        seconds: 10

    - name: Check OpenTelemetry Collector service status
      systemd:
        name: otelcol-contrib
      register: otel_service_status

    - name: Verify collector binary version
      shell: "{{ otel_home }}/otelcol-contrib --version"
      register: otel_version_check
      changed_when: false

    - name: Verify collector is responding on metrics endpoint
      uri:
        url: "http://localhost:8888/metrics"
        method: GET
        timeout: 10
      register: health_check
      retries: 3
      delay: 5
      ignore_errors: yes

    - name: Display migration results
      debug:
        msg: |
          === MIGRATION COMPLETE ===
          Service Status: {{ otel_service_status.status.ActiveState }}
          Binary Version: {{ otel_version_check.stdout }}
          Health Check: {{ 'PASSED' if health_check.status == 200 else 'FAILED' }}
          Metrics Endpoint: {{ 'Accessible' if health_check.status == 200 else 'Not accessible' }}
          
          New Installation Details:
          - Service: otelcol-contrib (systemd managed)
          - Binary: {{ otel_home }}/otelcol-contrib
          - Config: {{ otel_config_dir }}/config.yaml
          - Logs: {{ otel_log_dir }}/otelcol.log
          - Metrics: http://localhost:8888/metrics
          
          Management Commands:
          - Status: systemctl status otelcol-contrib
          - Logs: journalctl -u otelcol-contrib -f
          - Restart: systemctl restart otelcol-contrib

    - name: Final verification
      shell: |
        echo "=== FINAL VERIFICATION ==="
        echo "Old supervisor service:"
        supervisorctl status otel-collector 2>/dev/null || echo "✓ Completely removed"
        echo "New systemd service:"
        systemctl is-active otelcol-contrib || echo "✗ Service not active"
        echo "New service enabled:"
        systemctl is-enabled otelcol-contrib || echo "✗ Service not enabled"
      register: final_verification
      changed_when: false

    - name: Display final verification
      debug:
        msg: "{{ final_verification.stdout_lines }}"

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart otelcol
      systemd:
        name: otelcol-contrib
        state: restarted
