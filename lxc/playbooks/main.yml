---
- name: LXC OpenTelemetry and Metrics Management
  hosts: lxc
  gather_facts: yes
  
  vars:
    # Default values for Semaphore extra vars
    action_type: "install"  # Options: "install", "update", "uninstall"
    component_selection: "all"  # Options: "all", "otel", "metrics"
    force_removal: false  # Only used for uninstall - removes user/group
  
  pre_tasks:
    - name: Display execution plan
      debug:
        msg: |
          ==========================================
          LXC Management Operation
          ==========================================
          Action: {{ action_type }}
          Components: {{ component_selection }}
          Host: {{ inventory_hostname }}
          {% if action_type == 'uninstall' %}
          Force user/group removal: {{ force_removal }}
          {% endif %}
          ==========================================
          Will install: {{ action_type == 'install' }}
          Will configure: {{ action_type in ['install', 'update'] }}
          Will uninstall: {{ action_type == 'uninstall' }}
          ==========================================
  
    - name: Set derived action flags
      set_fact:
        perform_install: "{{ action_type == 'install' }}"
        perform_configure: "{{ action_type in ['install', 'update'] }}"
        perform_uninstall: "{{ action_type == 'uninstall' }}"
        update_existing: "{{ action_type == 'update' }}"
  
    - name: Set derived component flags
      set_fact:
        include_otel: "{{ (component_selection == 'all') or (component_selection == 'otel') }}"
        include_metrics: "{{ (component_selection == 'all') or (component_selection == 'metrics') }}"

  tasks:
    # ===================
    # UNINSTALL TASKS
    # ===================
    
    - name: "UNINSTALL: Stop OpenTelemetry Collector service"
      ansible.builtin.systemd:
        name: otelcol-contrib
        state: stopped
        enabled: no
      become: yes
      ignore_errors: yes
      when: perform_uninstall | bool and include_otel | bool
      
    - name: "UNINSTALL: Remove OpenTelemetry Collector systemd service file"
      ansible.builtin.file:
        path: /etc/systemd/system/otelcol-contrib.service
        state: absent
      become: yes
      when: perform_uninstall | bool and include_otel | bool
    
    - name: "UNINSTALL: Remove OpenTelemetry Collector configuration directory"
      ansible.builtin.file:
        path: /etc/otelcol-contrib
        state: absent
      become: yes
      when: perform_uninstall | bool and include_otel | bool
    
    - name: "UNINSTALL: Remove OpenTelemetry Collector installation directory"
      ansible.builtin.file:
        path: /opt/otelcol-contrib
        state: absent
      become: yes
      when: perform_uninstall | bool and include_otel | bool
    
    - name: "UNINSTALL: Remove OpenTelemetry Collector log directory"
      ansible.builtin.file:
        path: /var/log/otelcol-contrib
        state: absent
      become: yes
      when: perform_uninstall | bool and include_otel | bool
    
    - name: "UNINSTALL: Remove OpenTelemetry Collector data directory"
      ansible.builtin.file:
        path: /var/lib/otelcol-contrib
        state: absent
      become: yes
      when: perform_uninstall | bool and include_otel | bool
    
    - name: "UNINSTALL: Stop LXC Metrics Exporter service"
      ansible.builtin.systemd:
        name: lxc-metrics-exporter
        state: stopped
        enabled: no
      become: yes
      ignore_errors: yes
      when: perform_uninstall | bool and include_metrics | bool
      
    - name: "UNINSTALL: Remove LXC Metrics Exporter systemd service file"
      ansible.builtin.file:
        path: /etc/systemd/system/lxc-metrics-exporter.service
        state: absent
      become: yes
      when: perform_uninstall | bool and include_metrics | bool
    
    - name: "UNINSTALL: Remove LXC Metrics installation directory"
      ansible.builtin.file:
        path: /opt/lxc-metrics
        state: absent
      become: yes
      when: perform_uninstall | bool and include_metrics | bool
    
    - name: "UNINSTALL: Reload systemd daemon after service removal"
      ansible.builtin.systemd:
        daemon_reload: yes
      become: yes
      when: perform_uninstall | bool
    
    - name: "UNINSTALL: Check if otelcol user has running processes"
      ansible.builtin.shell: |
        ps -u otelcol -o pid= 2>/dev/null | wc -l
      register: otelcol_processes
      become: yes
      ignore_errors: yes
      when: perform_uninstall | bool and force_removal | bool
    
    - name: "UNINSTALL: Remove otelcol user (when force_removal is true)"
      ansible.builtin.user:
        name: otelcol
        state: absent
        remove: yes
        force: yes
      become: yes
      when: 
        - perform_uninstall | bool
        - force_removal | bool
        - (otelcol_processes.stdout | default('0') | int) == 0
      ignore_errors: yes
    
    - name: "UNINSTALL: Remove otelcol group (when force_removal is true)"
      ansible.builtin.group:
        name: otelcol
        state: absent
      become: yes
      when: 
        - perform_uninstall | bool
        - force_removal | bool
      ignore_errors: yes
    
    - name: "UNINSTALL: Clean up any remaining temp files"
      ansible.builtin.find:
        paths:
          - /tmp
          - /var/tmp
        patterns:
          - "otelcol*"
          - "lxc-metrics*"
          - "*otel*"
        file_type: file
        age: "1d"
      register: temp_files
      become: yes
      when: perform_uninstall | bool
    
    - name: "UNINSTALL: Remove temp files"
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      become: yes
      loop: "{{ temp_files.files | default([]) }}"
      ignore_errors: yes
      when: perform_uninstall | bool
    
    - name: "UNINSTALL: Check for any remaining processes"
      ansible.builtin.shell: |
        ps aux | grep -E "(otelcol|lxc-metrics)" | grep -v grep || echo "No processes found"
      register: remaining_processes
      become: yes
      ignore_errors: yes
      when: perform_uninstall | bool
    
    - name: "UNINSTALL: Display uninstall summary"
      debug:
        msg: |
          ==========================================
          Uninstall Summary for {{ inventory_hostname }}
          ==========================================
          
          Components Removed:
          {% if include_otel %}
          âœ“ OpenTelemetry Collector
            - Service: otelcol-contrib
            - Config: /etc/otelcol-contrib/
            - Install: /opt/otelcol-contrib/
            - Logs: /var/log/otelcol-contrib/
            - Data: /var/lib/otelcol-contrib/
          {% endif %}
          {% if include_metrics %}
          âœ“ LXC Metrics Exporter
            - Service: lxc-metrics-exporter
            - Install: /opt/lxc-metrics/
          {% endif %}
          
          {% if force_removal %}
          User/Group Removal:
          - otelcol user: {{ 'Removed' if (otelcol_processes.stdout | default('0') | int) == 0 else 'Skipped (processes running)' }}
          - otelcol group: Attempted removal
          {% else %}
          User/Group Status:
          - otelcol user/group: Preserved (set force_removal=true to remove)
          {% endif %}
          
          Remaining processes: {{ remaining_processes.stdout | default('None') }}
          
          ==========================================
          ðŸŽ‰ Uninstall completed successfully!
          ==========================================
      when: perform_uninstall | bool

  roles:
    # Install/Update roles (only run when NOT uninstalling)
    - role: ../roles/common
      when: not perform_uninstall | bool
    
    - role: ../roles/otel-collector
      when: include_otel | bool and not perform_uninstall | bool
      vars:
        install_collector: "{{ perform_install }}"
        configure_collector: "{{ perform_configure }}"
        update_existing: "{{ update_existing }}"
    
    - role: ../roles/metrics-exporter
      when: include_metrics | bool and not perform_uninstall | bool
      vars:
        install_exporter: "{{ perform_install }}"
        configure_exporter: "{{ perform_configure }}"
        update_existing: "{{ update_existing }}"

  post_tasks:
    - name: Final status message for install/update operations
      debug:
        msg: |
          ==========================================
          {{ action_type | title }} operation completed successfully!
          ==========================================
          Components: {{ component_selection }}
          Host: {{ inventory_hostname }}
          {% if action_type in ['install', 'update'] %}
          
          {% if include_otel %}
          OpenTelemetry Collector:
          - Status: Running
          - Metrics URL: http://{{ inventory_hostname }}:8888/metrics
          - Health Check: http://{{ inventory_hostname }}:13133
          {% endif %}
          {% if include_metrics %}
          
          LXC Metrics Exporter:
          - Status: Running  
          - Metrics URL: http://{{ inventory_hostname }}:9100/metrics
          - Health Check: http://{{ inventory_hostname }}:9100/health
          {% endif %}
          {% endif %}
          ==========================================
      when: not perform_uninstall | bool
