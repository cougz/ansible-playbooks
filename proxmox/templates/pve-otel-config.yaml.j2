receivers:
  # Receiver for Proxmox metrics from our exporter script
  prometheus:
    config:
      scrape_configs:
        - job_name: 'proxmox-metrics-exporter'
          scrape_interval: 30s
          static_configs:
            - targets: ['localhost:9100']
          metrics_path: /metrics

  # OTLP receiver for applications or other telemetry sources
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
      http:
        endpoint: "0.0.0.0:4318"

processors:
  # Memory limiter to prevent the collector from using too much memory
  memory_limiter:
    check_interval: 5s
    limit_percentage: 75
    spike_limit_percentage: 20

  # Attributes processor to add custom labels that become Prometheus labels
  attributes:
    actions:
      - key: os_type
        value: "linux"
        action: upsert
      - key: host_name
        value: "{{ ansible_hostname }}"
        action: upsert
      - key: app_name
        value: "proxmox-monitoring"
        action: upsert
      - key: proxmox_node
        value: "{{ inventory_hostname }}"
        action: upsert

  # Batch processor to group telemetry data before exporting
  batch:
    timeout: 5s
    send_batch_size: 512

exporters:
  # OTLP exporter to send data to your LGTM stack
  otlp:
    endpoint: "{{ otel_endpoint }}"
    tls:
      insecure: true

  # Debug exporter (optional, prints telemetry to collector logs)
  debug:
    verbosity: basic

extensions:
  # Health check extension for monitoring collector status
  health_check:
    endpoint: "127.0.0.1:13133"

service:
  extensions: [health_check]
  pipelines:
    metrics:
      receivers: [prometheus, otlp]
      processors: [memory_limiter, attributes, batch]  # attributes processor adds labels that become Prometheus labels
      exporters: [otlp, debug]
    traces:
      receivers: [otlp]
      processors: [attributes, batch]
      exporters: [otlp]
    logs:
      receivers: [otlp]
      processors: [attributes, batch]
      exporters: [otlp]

  # Collector's own telemetry settings
  telemetry:
    logs:
      level: info
    metrics:
      level: basic
      address: "127.0.0.1:8888"
