---
# Installation tasks for OpenTelemetry Collector

- name: Display installation info
  debug:
    msg: |
      ===============================================
      OpenTelemetry Collector Installation for Proxmox
      ===============================================
      Target Host: {{ inventory_hostname }}
      Target Endpoint: {{ otel_endpoint }}
      OTel Version: {{ otel_version }}
      ===============================================

- name: Create OpenTelemetry group
  group:
    name: "{{ otel_group }}"
    system: yes
  become: yes

- name: Create OpenTelemetry user
  user:
    name: "{{ otel_user }}"
    group: "{{ otel_group }}"
    groups: "disk"  # Add to disk group for NVMe access
    system: yes
    shell: /bin/false
    home: "{{ otel_home }}"
    create_home: no
  become: yes

- name: Create OpenTelemetry directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ otel_user }}"
    group: "{{ otel_group }}"
  loop:
    - "{{ otel_home }}"
    - "{{ otel_config_dir }}"
    - "{{ otel_log_dir }}"
    - "{{ otel_data_dir }}"
  become: yes

- name: Download OpenTelemetry Collector Contrib
  get_url:
    url: "https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v{{ otel_version }}/otelcol-contrib_{{ otel_version }}_linux_amd64.tar.gz"
    dest: /tmp/otelcol-contrib.tar.gz
    mode: '0644'
    timeout: 120
  become: yes
  when: not update_existing | default(false) | bool or force_reinstall | default(false) | bool

- name: Extract OpenTelemetry Collector Contrib
  unarchive:
    src: /tmp/otelcol-contrib.tar.gz
    dest: "{{ otel_home }}"
    remote_src: yes
    owner: "{{ otel_user }}"
    group: "{{ otel_group }}"
  become: yes
  when: not update_existing | default(false) | bool or force_reinstall | default(false) | bool

- name: Set executable permissions on otelcol-contrib binary
  file:
    path: "{{ otel_home }}/otelcol-contrib"
    mode: '0755'
  become: yes

- name: Check current capabilities of /usr/sbin/nvme
  ansible.builtin.command: getcap /usr/sbin/nvme
  register: nvme_getcap_result
  changed_when: false
  ignore_errors: true
  become: yes

- name: Apply setcap to /usr/sbin/nvme for cap_sys_admin+ep
  ansible.builtin.command: setcap 'cap_sys_admin+ep' /usr/sbin/nvme
  when: "'cap_sys_admin=ep' not in nvme_getcap_result.stdout | default('')"
  become: yes

- name: Create udev rule for NVMe device permissions
  ansible.builtin.copy:
    content: |
      # Allow otelcol group access to NVMe devices for SMART monitoring
      KERNEL=="nvme[0-9]*", SUBSYSTEM=="nvme", GROUP="{{ otel_group }}", MODE="0640"
    dest: /etc/udev/rules.d/99-nvme-otelcol.rules
    owner: root
    group: root
    mode: '0644'
  notify: reload udev rules
  become: yes

- name: Clean up downloaded archive
  ansible.builtin.file:
    path: /tmp/otelcol-contrib.tar.gz
    state: absent
  become: yes
