---
- name: Install Python dependencies
  package:
    name:
      - python3
      - python3-pip
      - python3-venv
      - git
    state: present
  become: yes

- name: Create metrics exporter directory
  file:
    path: "{{ metrics_exporter_install_dir }}"
    state: directory
    owner: "{{ metrics_exporter_user }}"
    group: "{{ metrics_exporter_group }}"
    mode: '0755'
  become: yes

- name: Configure git safe directory
  command: git config --global --add safe.directory {{ metrics_exporter_install_dir }}
  become: yes
  changed_when: false

- name: Check if repository exists
  stat:
    path: "{{ metrics_exporter_install_dir }}/.git"
  register: repo_exists
  become: yes

- name: Remove existing repository if update needed
  file:
    path: "{{ metrics_exporter_install_dir }}"
    state: absent
  become: yes
  when: repo_exists.stat.exists and (update_existing | default(false) | bool or force_reinstall | default(false) | bool)

- name: Re-create directory after removal
  file:
    path: "{{ metrics_exporter_install_dir }}"
    state: directory
    owner: "{{ metrics_exporter_user }}"
    group: "{{ metrics_exporter_group }}"
    mode: '0755'
  become: yes
  when: repo_exists.stat.exists and (update_existing | default(false) | bool or force_reinstall | default(false) | bool)

- name: Clone metrics-exporters repository
  git:
    repo: "{{ metrics_exporter_repo }}"
    dest: "{{ metrics_exporter_install_dir }}"
    version: "{{ metrics_exporter_version }}"
    force: yes
  become: yes

- name: Remove broken virtual environment if it exists
  file:
    path: "{{ metrics_exporter_install_dir }}/venv"
    state: absent
  become: yes
  when: need_venv_rebuild | default(false) | bool

- name: Create Python virtual environment
  command: "{{ metrics_exporter_python_version }} -m venv {{ metrics_exporter_install_dir }}/venv"
  args:
    creates: "{{ metrics_exporter_install_dir }}/venv/pyvenv.cfg"
  become: yes
  register: venv_creation

- name: Set ownership of virtual environment
  file:
    path: "{{ metrics_exporter_install_dir }}/venv"
    state: directory
    owner: "{{ metrics_exporter_user }}"
    group: "{{ metrics_exporter_group }}"
    recurse: yes
  become: yes

- name: Upgrade pip in virtual environment
  command: sudo -u {{ metrics_exporter_user }} {{ metrics_exporter_install_dir }}/venv/bin/pip install --upgrade pip
  become: yes

- name: Install Python requirements
  command: sudo -u {{ metrics_exporter_user }} {{ metrics_exporter_install_dir }}/venv/bin/pip install -r {{ metrics_exporter_install_dir }}/requirements.txt
  become: yes

- name: Verify critical dependencies are installed
  command: "{{ metrics_exporter_install_dir }}/venv/bin/python -c 'import uvicorn, fastapi, opentelemetry; print(\"All dependencies OK\")'"
  register: dependency_verification
  become: yes
  become_user: "{{ metrics_exporter_user }}"
  changed_when: false

- name: Display dependency verification result
  debug:
    msg: |
      Dependency Verification:
      {{ dependency_verification.stdout }}

- name: Set ownership of metrics exporter directory (final)
  file:
    path: "{{ metrics_exporter_install_dir }}"
    state: directory
    owner: "{{ metrics_exporter_user }}"
    group: "{{ metrics_exporter_group }}"
    recurse: yes
  become: yes
